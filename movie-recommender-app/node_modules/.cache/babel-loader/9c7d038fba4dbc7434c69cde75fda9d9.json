{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\OneDrive\\\\Desktop\\\\Git Uploads\\\\Movies-Recommendation\\\\movie-recommender-app\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport NavBar from \"./Components/NavBar\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Footer from \"./Components/Footer\";\nimport \"./Components/styles/HomeStyles.css\";\nimport MovieCard from \"./Components/MovieCard\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const api_key = process.env.REACT_APP_TMDB_API_KEY || 'b97316ed479ee4226afefc88d1792909';\n  const [list, setList] = useState([]);\n  const [homeGenreList, setHomeGenreList] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [currMovies, setCurrMovies] = useState([]);\n  useEffect(() => {\n    setCurrMovies([]);\n    setSelectedGenres([]);\n    setHomeGenreList([]);\n    setList([]);\n    fetch('/api/movies').then(response => {\n      if (!response.ok) throw new Error('Failed to fetch movies');\n      return response.json();\n    }).then(data => {\n      setList(data.arr || []);\n      console.log('Movies:', data.arr);\n    }).catch(error => console.error('Error fetching movies:', error));\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`).then(response => {\n      if (!response.ok) throw new Error('Failed to fetch genres');\n      return response.json();\n    }).then(data => {\n      setHomeGenreList(data.genres || []);\n      console.log('Genres:', data.genres);\n    }).catch(error => console.error('Error fetching genres:', error));\n  }, [api_key]);\n  useEffect(() => {\n    setCurrMovies([]);\n\n    if (selectedGenres.length > 0) {\n      fetch(`https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${api_key}&release_date.lte=2019-12-12&with_genres=${encodeURI(selectedGenres.join(\",\"))}`).then(response => {\n        if (!response.ok) throw new Error('Failed to fetch movies by genre');\n        return response.json();\n      }).then(data => setCurrMovies(data.results || [])).catch(error => console.error('Error fetching movies by genre:', error));\n    }\n  }, [selectedGenres, api_key]);\n\n  const onTagClick = genreId => {\n    setSelectedGenres(prevGenres => prevGenres.includes(genreId) ? prevGenres.filter(id => id !== genreId) : [...prevGenres, genreId]);\n  };\n\n  const renderMovies = () => currMovies.map(movie => {\n    if (movie && movie.id && movie.original_title) {\n      return /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, `${movie.id}-${movie.original_title}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this);\n    }\n\n    return null;\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomePage\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        isHome: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HomeSearch\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          movies: list,\n          placeholder: \"Search for a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"genreHeader\",\n        children: \"Get Top Movies Based On Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonGrid\",\n        children: homeGenreList.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onTagClick(genre.id),\n          className: selectedGenres.includes(genre.id) ? \"genreTagON\" : \"genreTagOFF\",\n          children: [genre.name, selectedGenres.includes(genre.id) && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-times\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 67\n          }, this)]\n        }, genre.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid HomeMovies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container HomeMovieGrid\",\n        children: currMovies.length > 0 ? renderMovies() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"HomeFooter\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"aErKImirxbpwuPfkqDdzX+2WYJI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["NavBar","SearchBar","Footer","MovieCard","useEffect","useState","Home","api_key","process","env","REACT_APP_TMDB_API_KEY","list","setList","homeGenreList","setHomeGenreList","selectedGenres","setSelectedGenres","currMovies","setCurrMovies","fetch","then","response","ok","Error","json","data","arr","console","log","catch","error","genres","length","encodeURI","join","results","onTagClick","genreId","prevGenres","includes","filter","id","renderMovies","map","movie","original_title","genre","name"],"sources":["C:/Users/karth/OneDrive/Desktop/Git Uploads/Movies-Recommendation/movie-recommender-app/src/Pages/Home.js"],"sourcesContent":["import NavBar from \"./Components/NavBar\";\r\nimport SearchBar from \"./Components/SearchBar\";\r\nimport Footer from \"./Components/Footer\";\r\nimport \"./Components/styles/HomeStyles.css\";\r\nimport MovieCard from \"./Components/MovieCard\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = () => {\r\n    const api_key = process.env.REACT_APP_TMDB_API_KEY || 'b97316ed479ee4226afefc88d1792909';\r\n    const [list, setList] = useState([]);\r\n    const [homeGenreList, setHomeGenreList] = useState([]);\r\n    const [selectedGenres, setSelectedGenres] = useState([]);\r\n    const [currMovies, setCurrMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCurrMovies([]);\r\n        setSelectedGenres([]);\r\n        setHomeGenreList([]);\r\n        setList([]);\r\n\r\n        fetch('/api/movies')\r\n            .then((response) => {\r\n                if (!response.ok) throw new Error('Failed to fetch movies');\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setList(data.arr || []);\r\n                console.log('Movies:', data.arr);\r\n            })\r\n            .catch((error) => console.error('Error fetching movies:', error));\r\n\r\n        fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${api_key}`)\r\n            .then((response) => {\r\n                if (!response.ok) throw new Error('Failed to fetch genres');\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setHomeGenreList(data.genres || []);\r\n                console.log('Genres:', data.genres);\r\n            })\r\n            .catch((error) => console.error('Error fetching genres:', error));\r\n    }, [api_key]);\r\n\r\n    useEffect(() => {\r\n        setCurrMovies([]);\r\n        if (selectedGenres.length > 0) {\r\n            fetch(\r\n                `https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${api_key}&release_date.lte=2019-12-12&with_genres=${encodeURI(selectedGenres.join(\",\"))}`\r\n            )\r\n                .then((response) => {\r\n                    if (!response.ok) throw new Error('Failed to fetch movies by genre');\r\n                    return response.json();\r\n                })\r\n                .then((data) => setCurrMovies(data.results || []))\r\n                .catch((error) => console.error('Error fetching movies by genre:', error));\r\n        }\r\n    }, [selectedGenres, api_key]);\r\n\r\n    const onTagClick = (genreId) => {\r\n        setSelectedGenres((prevGenres) =>\r\n            prevGenres.includes(genreId)\r\n                ? prevGenres.filter((id) => id !== genreId)\r\n                : [...prevGenres, genreId]\r\n        );\r\n    };\r\n\r\n    const renderMovies = () =>\r\n        currMovies.map((movie) => {\r\n            if (movie && movie.id && movie.original_title) {\r\n                return <MovieCard key={`${movie.id}-${movie.original_title}`} movie={movie} />;\r\n            }\r\n            return null;\r\n        });\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"HomePage\">\r\n                <NavBar isHome={false} />\r\n                <div className=\"HomeSearch\">\r\n                    <SearchBar movies={list} placeholder=\"Search for a Movie\" />\r\n                </div>\r\n                <h2 className=\"genreHeader\">Get Top Movies Based On Genre</h2>\r\n                <div className=\"buttonGrid\">\r\n                    {homeGenreList.map((genre) => (\r\n                        <div\r\n                            key={genre.id}\r\n                            onClick={() => onTagClick(genre.id)}\r\n                            className={selectedGenres.includes(genre.id) ? \"genreTagON\" : \"genreTagOFF\"}\r\n                        >\r\n                            {genre.name}\r\n                            {selectedGenres.includes(genre.id) && <i className=\"fa fa-times\" aria-hidden=\"true\" />}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"container-fluid HomeMovies\">\r\n                <div className=\"container HomeMovieGrid\">{currMovies.length > 0 ? renderMovies() : null}</div>\r\n            </div>\r\n            <div className=\"HomeFooter\">\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}